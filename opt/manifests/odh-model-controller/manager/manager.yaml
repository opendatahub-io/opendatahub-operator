apiVersion: apps/v1
kind: Deployment
metadata:
  name: odh-model-controller
  labels:
    control-plane: odh-model-controller
    app: odh-model-controller
spec:
  selector:
    matchLabels:
      control-plane: odh-model-controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: odh-model-controller
        app: odh-model-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: control-plane
                      operator: In
                      values:
                        - odh-model-controller
                topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
      containers:
        - command:
            - /manager
          args:
            - --leader-elect
          image: controller:latest
          name: manager
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AUTH_AUDIENCE
              valueFrom:
                configMapKeyRef:
                  name: auth-refs
                  key: AUTH_AUDIENCE
                  optional: true
            - name: AUTHORINO_LABEL
              valueFrom:
                configMapKeyRef:
                  name: auth-refs
                  key: AUTHORINO_LABEL
                  optional: true
            - name: CONTROL_PLANE_NAME
              valueFrom:
                configMapKeyRef:
                  name: service-mesh-refs
                  key: CONTROL_PLANE_NAME
                  optional: true
            - name: MESH_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: service-mesh-refs
                  key: MESH_NAMESPACE
                  optional: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 64Mi
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      serviceAccountName: odh-model-controller
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: odh-model-controller-webhook-cert
