name: Build Catalog FBC and run Integration tests
on:
  pull_request_target:
    types: [labeled]

permissions: { }

env:
  IMAGE_TAG_BASE: quay.io/${{ secrets.QUAY_ORG }}/opendatahub-operator
  PR_NUMBER: pr-${{ github.event.number }}
jobs:
  get-merge-commit:
    name: Get merge commit
    uses: ./.github/workflows/get-merge-commit.yaml

  create-catalog-image:
    name: Build/push catalog image
    # add this condition to the jenkins job step -> if: ${{ github.event.label.name == 'run-integration-tests' }}
    runs-on: ubuntu-latest
    needs: get-merge-commit
    env:
      IMAGE_BUILDER: podman
    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        if: needs.get-merge-commit.outputs.mergedSha
        with:
          ref: ${{ needs.get-merge-commit.outputs.mergedSha }}

      - name: Quay.io login
        uses: redhat-actions/podman-login@v1
        if: needs.get-merge-commit.outputs.mergedSha
        env:
          QUAY_ID: ${{ secrets.QUAY_ID }}
          QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
        with:
          registry: quay.io
          username: ${{ env.QUAY_ID }}
          password: ${{ env.QUAY_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        if: needs.get-merge-commit.outputs.mergedSha
        with:
          go-version-file: go.mod

      - name: Get latest release version
        if: needs.get-merge-commit.outputs.mergedSha
        env:
          OPERATOR_REPOSITORY_NAME: opendatahub-io/opendatahub-operator
        run: |
          version_tag=$(curl -s https://api.github.com/repos/${OPERATOR_REPOSITORY_NAME}/releases/latest | jq -r .tag_name)-${{ env.PR_NUMBER }}
          echo "VERSION_TAG=${version_tag:1}" >> $GITHUB_ENV

      - name: Create operator image
        if: needs.get-merge-commit.outputs.mergedSha
        env:
          IMG: ${{ env.IMAGE_TAG_BASE }}:v${VERSION_TAG}
        run: |
          echo "version tag: ${VERSION_TAG}"
          make image

      - name: Create bundle image
        if: needs.get-merge-commit.outputs.mergedSha
        env:
          BUNDLE_IMG: ${{ env.IMAGE_TAG_BASE }}-bundle:v${VERSION_TAG}
          IMG_TAG: v${VERSION_TAG}
          VERSION: ${VERSION_TAG}
        run: |
          echo "version tag: ${VERSION_TAG}"
          make bundle-build
          make bundle-push

      - name: Create catalog image
        if: needs.get-merge-commit.outputs.mergedSha
        env:
          CATALOG_IMG: ${{ env.IMAGE_TAG_BASE }}-catalog:${{ env.PR_NUMBER }}
          BUNDLE_IMG: ${{ env.IMAGE_TAG_BASE }}-bundle:v${VERSION_TAG}
        run: |
          echo "version tag: ${VERSION_TAG}"
          make catalog-build 
          make catalog-push
