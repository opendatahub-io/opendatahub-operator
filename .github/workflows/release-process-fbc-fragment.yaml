name: FBC Processor
run-name: FBC Processor
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  process-fbc:
    if: ${{ github.ref_name != 'main' && startsWith(github.ref_name, 'odh-3.') }}
    runs-on: ubuntu-latest
    steps:
      - name: Get Current branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: get_branch
      - name: Git checkout current branch
        uses: actions/checkout@v5
        with:
          ref: ${{ steps.get_branch.outputs.branch }}
          path: ${{ steps.get_branch.outputs.branch }}

      - name: Generate FBC Fragment
        id: generate-fbc-fragment
        run: |
          BRANCH_NAME=${{ steps.get_branch.outputs.branch }}
          QUAY_IMG=quay.io/opendatahub/opendatahub-operator-bundle
          cd $BRANCH_NAME
          sed -i '/# Ignore catalog related files/d' .gitignore
          sed -i '/catalog\//d' .gitignore
          CURRENT_VERSION=${BRANCH_NAME#odh-}
          MAJOR=$(echo "$CURRENT_VERSION" | cut -d '.' -f 1)
          MINOR=$(echo "$CURRENT_VERSION" | cut -d '.' -f 2)
          PATCH=$(echo "$CURRENT_VERSION" | cut -d '.' -f 3)
          if [ "$PATCH" -eq 0 ]; then
            if [ "$MINOR" -eq 0 ]; then
              PREV_MAJOR=$((MAJOR - 1))
              PREV_MINOR=9
              PREV_PATCH=0
              PREV_VERSION="$PREV_MAJOR.$PREV_MINOR.$PREV_PATCH"
            else
              PREV_PATCH=0
              PREV_MINOR=$((MINOR - 1))
              PREV_VERSION="$MAJOR.$PREV_MINOR.$PREV_PATCH"
            fi
          else
            PREV_PATCH=$((PATCH - 1))
            PREV_VERSION="$MAJOR.$MINOR.$PREV_PATCH"
          fi
          make catalog-prepare -e BUNDLE_IMGS=${QUAY_IMG}:v${PREV_VERSION},${QUAY_IMG}:v${CURRENT_VERSION}

      - name: Push latest FBC artifacts
        uses: actions-js/push@master
        with:
          branch: ${{ steps.get_branch.outputs.branch }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "Regenerated the catalog.yaml"
          directory: ${{ steps.get_branch.outputs.branch }}
          author_name: OpenShift AI Core Platform Team
          author_email: openshift-ai-platform@redhat.com
