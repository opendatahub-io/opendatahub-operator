---
# ValidatingAdmissionPolicy to warn when S3 connection secrets are missing AWS_S3_BUCKET
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: connectionapi-check-s3-bucket
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["secrets"]
  validations:
    # Warn if secret has S3 connection type (either annotation) but missing AWS_S3_BUCKET
    - expression: >-
        !has(object.metadata.annotations) ||
        !(
          ('opendatahub.io/connection-type-protocol' in object.metadata.annotations &&
           object.metadata.annotations['opendatahub.io/connection-type-protocol'] == 's3') ||
          ('opendatahub.io/connection-type-ref' in object.metadata.annotations &&
           object.metadata.annotations['opendatahub.io/connection-type-ref'] == 's3')
        ) ||
        (has(object.data) && 'AWS_S3_BUCKET' in object.data)
      messageExpression: >-
        'Secret "' + object.metadata.name + '" will not be usable for deploying models because it has S3 connection type annotation, but is missing "AWS_S3_BUCKET" data key'
      reason: Invalid

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: connectionapi-check-s3-bucket-binding
spec:
  policyName: connectionapi-check-s3-bucket
  validationActions: ["Warn"]  # Only warn, don't deny creation or update and dont care which namespace the secret is in.
