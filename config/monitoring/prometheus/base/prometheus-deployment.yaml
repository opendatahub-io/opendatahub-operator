apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
  name: prometheus
  namespace: redhat-ods-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: prometheus
  template:
    metadata:
      labels:
        deployment: prometheus
      annotations:
        alertmanager: <alertmanager_config_hash>
        prometheus: <prometheus_config_hash>
    spec:
      serviceAccountName: prometheus
      containers:
      - name: oauth-proxy
        args:
        - -provider=openshift
        - -https-address=:9091
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:9090
        - -openshift-service-account=prometheus
        - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "redhat-ods-monitoring",
          "namespace": "redhat-ods-monitoring"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
          "name": "redhat-ods-monitoring", "namespace": "redhat-ods-monitoring"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret-file=/etc/proxy/secrets/session_secret
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - -client-id=system:serviceaccount:redhat-ods-monitoring:prometheus
        - -skip-auth-regex=^/metrics
        image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:ab112105ac37352a2a4916a39d6736f5db6ab4c29bad4467de8d613e80e9bb33
        ports:
        - containerPort: 9091
          name: https
        livenessProbe:
          httpGet:
            path: /oauth/healthz
            port: 9091
            scheme: HTTPS
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /oauth/healthz
            port: 9091
            scheme: HTTPS
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/tls/private
          name: prometheus-tls
          readOnly: false
        - mountPath: /etc/proxy/secrets
          name: prometheus-proxy
          readOnly: false
      
      - name: prometheus # version 2.36.2 (branch: rhaos-4.11-rhel-8, revision: e55e7c7c655214174c97ebb97fbc9bba47ff9adc)
        image: registry.redhat.io/openshift4/ose-prometheus@sha256:62c89e82fdf9639eace286d11c91e6d1c3fdd3437e081ed9dce6f5ea783c660f
        args:
          - --storage.tsdb.retention.time=6h
          - --storage.tsdb.min-block-duration=2h
          - --storage.tsdb.max-block-duration=2h
          - --storage.tsdb.path=/prometheus/data
          - --config.file=/etc/prometheus/prometheus.yml  # use prometheus-configs.yaml data
          - --web.listen-address=0.0.0.0:9090
          - --web.enable-lifecycle
          - --web.enable-admin-api
        imagePullPolicy: Always
        ports:
        - containerPort: 9090
          name: http
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: 400m
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /prometheus
          name: prometheus-data

        - mountPath: /etc/prometheus
          name: prometheus-config

        - mountPath: /var/run/secrets/kubernetes.io/scraper
          name: prometheus-secret

        - mountPath: /etc/prometheus/ca
          name: prometheus-service-ca

      - name: alertmanager-proxy
        args:
        - -provider=openshift
        - -https-address=:10443
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:9093
        - -openshift-service-account=prometheus
        - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "redhat-ods-monitoring",
          "namespace": "redhat-ods-monitoring"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
          "name": "redhat-ods-monitoring", "namespace": "redhat-ods-monitoring"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret-file=/etc/proxy/secrets/session_secret
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - -client-id=system:serviceaccount:redhat-ods-monitoring:prometheus
        - -skip-auth-regex=^/metrics
        image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:4bef31eb993feb6f1096b51b4876c65a6fb1f4401fee97fa4f4542b6b7c9bc46
        imagePullPolicy: Always
        ports:
        - containerPort: 10443
          name: web
        livenessProbe:
          httpGet:
            path: /oauth/healthz
            port: 10443
            scheme: HTTPS
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /oauth/healthz
            port: 10443
            scheme: HTTPS
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/tls/private
          name: alertmanager-tls
          readOnly: false
        - mountPath: /etc/proxy/secrets
          name: alertmanager-proxy
          readOnly: false

      - name: alertmanager
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 128Mi
        args:
          - --log.level=info
          - --storage.path=/alertmanager
          - --config.file=/etc/alertmanager/alertmanager.yml
          - --web.external-url=https://<set_alertmanager_host>
        image: registry.redhat.io/openshift4/ose-prometheus-alertmanager@sha256:b180f86ebeccbab28b05f75a570ead59fc1462a77dde648b2b1d1ebe9e33cbdb
        imagePullPolicy: Always
        ports:
          - containerPort: 9093
            name: web
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9093
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
          - mountPath: /etc/alertmanager
            name: alertmanager-config
          - mountPath: /alertmanager
            name: alertmanager-data

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 90

      volumes:
      # for prometheus container
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-data
      - name: prometheus-config
        configMap:
          defaultMode: 420
          name: prometheus
      - name: prometheus-service-ca
        configMap:
          name: prometheus-service-ca
      - name: prometheus-secret
        secret:
          secretName: prometheus-secret
          defaultMode: 420

      # for alertmanager container
      - name: alertmanager-data
        persistentVolumeClaim:
          claimName: "alertmanager-data"
      - name: alertmanager-config
        configMap:
          defaultMode: 420
          name: alertmanager

      # for oauth-proxy container
      - name: prometheus-tls
        secret:
          defaultMode: 420
          secretName: prometheus-tls
      - name: prometheus-proxy
        secret:
          defaultMode: 420
          secretName: prometheus-proxy

      # for alertmanager-proxy container
      - name: alertmanager-tls
        secret:
          defaultMode: 420
          secretName: alertmanager-tls
      - name: alertmanager-proxy
        secret:
          defaultMode: 420
          secretName: alertmanager-proxy  
  strategy:
    type: Recreate