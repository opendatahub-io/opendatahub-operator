apiVersion: monitoring.rhobs/v1
kind: PrometheusRule
metadata:
  name: dashboard-rules
  namespace: [[ .Monitoring.Namespace ]]
  labels:
    monitoring.rhobs/stack: rhoai-cmo-ms
spec:
  groups:
    - name: SLOs - TrustyAI Controller Manager
      rules:
      - expr: |
          absent(up{job=~'TrustyAI Controller Manager'}) * 0 or vector(1)
        labels:
          instance: trustyai-service-operator-controller-manager
        record: probe_success
      - expr: |
          1 - min(avg_over_time(probe_success{instance="trustyai-service-operator-controller-manager"}[1d]))
        labels:
          instance: trustyai-service-operator-controller-manager
        record: probe_success:burnrate1d
      - expr: |
          1 - min(avg_over_time(probe_success{instance="trustyai-service-operator-controller-manager"}[1h]))
        labels:
          instance: trustyai-service-operator-controller-manager
        record: probe_success:burnrate1h
      - expr: |
          1 - min(avg_over_time(probe_success{instance="trustyai-service-operator-controller-manager"}[2h]))
        labels:
          instance: trustyai-service-operator-controller-manager
        record: probe_success:burnrate2h
      - expr: |
          1 - min(avg_over_time(probe_success{instance="trustyai-service-operator-controller-manager"}[30m]))
        labels:
          instance: trustyai-service-operator-controller-manager
        record: probe_success:burnrate30m
      - expr: |
          1 - min(avg_over_time(probe_success{instance="trustyai-service-operator-controller-manager"}[3d]))
        labels:
          instance: trustyai-service-operator-controller-manager
        record: probe_success:burnrate3d
      - expr: |
          1 - min(avg_over_time(probe_success{instance="trustyai-service-operator-controller-manager"}[5m]))
        labels:
          instance: trustyai-service-operator-controller-manager
        record: probe_success:burnrate5m
      - expr: |
          1 - min(avg_over_time(probe_success{instance="trustyai-service-operator-controller-manager"}[6h]))
        labels:
          instance: trustyai-service-operator-controller-manager
        record: probe_success:burnrate6h

    - name: SLOs - ODH Dashboard
      rules:
      - expr: |
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard",code=~"5.."}[1d]))
          /
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard"}[1d]))
        labels:
          route: rhods-dashboard
        record: haproxy_backend_http_responses_total:burnrate1d
      - expr: |
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard",code=~"5.."}[1h]))
          /
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard"}[1h]))
        labels:
          route: rhods-dashboard
        record: haproxy_backend_http_responses_total:burnrate1h
      - expr: |
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard",code=~"5.."}[2h]))
          /
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard"}[2h]))
        labels:
          route: rhods-dashboard
        record: haproxy_backend_http_responses_total:burnrate2h
      - expr: |
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard",code=~"5.."}[30m]))
          /
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard"}[30m]))
        labels:
          route: rhods-dashboard
        record: haproxy_backend_http_responses_total:burnrate30m
      - expr: |
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard",code=~"5.."}[3d]))
          /
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard"}[3d]))
        labels:
          route: rhods-dashboard
        record: haproxy_backend_http_responses_total:burnrate3d
      - expr: |
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard",code=~"5.."}[5m]))
          /
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard"}[5m]))
        labels:
          route: rhods-dashboard
        record: haproxy_backend_http_responses_total:burnrate5m
      - expr: |
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard",code=~"5.."}[6h]))
          /
          sum(rate(haproxy_backend_http_responses_total{route="rhods-dashboard"}[6h]))
        labels:
          route: rhods-dashboard
        record: haproxy_backend_http_responses_total:burnrate6h

      - expr: |
          1 - avg_over_time(probe_success{instance=~"rhods-dashboard-.*", job="user_facing_endpoints_status_rhods_dashboard"}[1d])
        labels:
          instance: rhods-dashboard
        record: probe_success:burnrate1d
      - expr: |
          1 - avg_over_time(probe_success{instance=~"rhods-dashboard-.*", job="user_facing_endpoints_status_rhods_dashboard"}[1h])
        labels:
          instance: rhods-dashboard
        record: probe_success:burnrate1h
      - expr: |
          1 - avg_over_time(probe_success{instance=~"rhods-dashboard-.*", job="user_facing_endpoints_status_rhods_dashboard"}[2h])
        labels:
          instance: rhods-dashboard
        record: probe_success:burnrate2h
      - expr: |
          1 - avg_over_time(probe_success{instance=~"rhods-dashboard-.*", job="user_facing_endpoints_status_rhods_dashboard"}[30m])
        labels:
          instance: rhods-dashboard
        record: probe_success:burnrate30m
      - expr: |
          1 - avg_over_time(probe_success{instance=~"rhods-dashboard-.*", job="user_facing_endpoints_status_rhods_dashboard"}[3d])
        labels:
          instance: rhods-dashboard
        record: probe_success:burnrate3d
      - expr: |
          1 - avg_over_time(probe_success{instance=~"rhods-dashboard-.*", job="user_facing_endpoints_status_rhods_dashboard"}[5m])
        labels:
          instance: rhods-dashboard
        record: probe_success:burnrate5m
      - expr: |
          1 - avg_over_time(probe_success{instance=~"rhods-dashboard-.*", job="user_facing_endpoints_status_rhods_dashboard"}[6h])
        labels:
          instance: rhods-dashboard
        record: probe_success:burnrate6h