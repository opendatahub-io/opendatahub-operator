apiVersion: monitoring.rhobs/v1
kind: PrometheusRule
metadata:
  name: kserve-prometheusrules
  namespace:{{ .MonNamespace }}
spec:
  groups:
    - name: SLOs-probe_success_kserve
      rules:
      - alert: Kserve Controller Probe Success Burn Rate
        annotations:
          message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
          triage: "https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Model-Serving/rhods-kserve-controller-probe-success-burn-rate.md"
          summary: Kserve Controller Probe Success Burn Rate
        expr: |
          sum(probe_success:burnrate5m{instance=~"kserve-controller-manager"}) by (instance) > (14.40 * (1-0.98000))
          and
          sum(probe_success:burnrate1h{instance=~"kserve-controller-manager"}) by (instance) > (14.40 * (1-0.98000))
        for: 2m
        labels:
          severity: critical
      - alert: Kserve Controller Probe Success Burn Rate
        annotations:
          message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
          triage: "https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Model-Serving/rhods-kserve-controller-probe-success-burn-rate.md"
          summary: Kserve Controller Probe Success Burn Rate
        expr: |
          sum(probe_success:burnrate30m{instance=~"kserve-controller-manager"}) by (instance) > (6.00 * (1-0.98000))
          and
          sum(probe_success:burnrate6h{instance=~"kserve-controller-manager"}) by (instance) > (6.00 * (1-0.98000))
        for: 15m
        labels:
          severity: critical
      - alert: Kserve Controller Probe Success Burn Rate
        annotations:
          message: 'High error budget burn for {{ $labels.instance }} (current value: {{ $value }}).'
          triage: "https://gitlab.cee.redhat.com/service/managed-tenants-sops/-/blob/main/RHODS/Model-Serving/rhods-kserve-controller-probe-success-burn-rate.md"
          summary: Kserve Controller Probe Success Burn Rate
        expr: |
          sum(probe_success:burnrate2h{instance=~"kserve-controller-manager"}) by (instance) > (3.00 * (1-0.98000))
          and
          sum(probe_success:burnrate1d{instance=~"kserve-controller-manager"}) by (instance) > (3.00 * (1-0.98000))
        for: 1h
        labels:
          severity: warning

    - name: SLOs - Kserve Controller Manager
      rules:
      - expr: |
          absent(up{job=~'Kserve Controller Manager'}) * 0 or vector(1)
        labels:
          instance: kserve-controller-manager
        record: probe_success
      - expr: |
          1 - min(avg_over_time(probe_success{instance="kserve-controller-manager"}[1d]))
        labels:
          instance: kserve-controller-manager
        record: probe_success:burnrate1d
      - expr: |
          1 - min(avg_over_time(probe_success{instance="kserve-controller-manager"}[1h]))
        labels:
          instance: kserve-controller-manager
        record: probe_success:burnrate1h
      - expr: |
          1 - min(avg_over_time(probe_success{instance="kserve-controller-manager"}[2h]))
        labels:
          instance: kserve-controller-manager
        record: probe_success:burnrate2h
      - expr: |
          1 - min(avg_over_time(probe_success{instance="kserve-controller-manager"}[30m]))
        labels:
          instance: kserve-controller-manager
        record: probe_success:burnrate30m
      - expr: |
          1 - min(avg_over_time(probe_success{instance="kserve-controller-manager"}[3d]))
        labels:
          instance: kserve-controller-manager
        record: probe_success:burnrate3d
      - expr: |
          1 - min(avg_over_time(probe_success{instance="kserve-controller-manager"}[5m]))
        labels:
          instance: kserve-controller-manager
        record: probe_success:burnrate5m
      - expr: |
          1 - min(avg_over_time(probe_success{instance="kserve-controller-manager"}[6h]))
        labels:
          instance: kserve-controller-manager
        record: probe_success:burnrate6h